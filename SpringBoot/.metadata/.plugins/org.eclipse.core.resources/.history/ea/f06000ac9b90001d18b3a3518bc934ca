package com.cg.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.cg.entity.Student;
import com.cg.exception.NoSuchStudentFoundException;
import com.cg.service.StudentServiceImpl;

@RestController
public class StudentRestController {

	@Autowired
	StudentServiceImpl service;

	@GetMapping("/getallstudents")
	public ResponseEntity<List<Student>> getAllSudents() {
		try {
			List<Student> students = service.findAllStudents();
			if (students.isEmpty())
				return new ResponseEntity<>(HttpStatus.NO_CONTENT);
			return new ResponseEntity<>(students, HttpStatus.OK);
		} catch (Exception ex) {
			return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
		}

	}

	@PostMapping("/newstud")
	public ResponseEntity<Student> createStud(@RequestBody Student s1) {
		try {
			Student stud = service.createStudent(s1);
			return new ResponseEntity<>(stud, HttpStatus.CREATED);
		} catch (Exception ex) {
			ex.printStackTrace();
			return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
	}

	@GetMapping("getbyid/{id}")
	public ResponseEntity<Student> getStudentById(@PathVariable int id) {
		try {
			return new ResponseEntity<>(service.findStudentById(id), HttpStatus.OK);
		} catch (NoSuchStudentFoundException ex) {
			return new ResponseEntityM<>(HttpStatus.NOT_FOUND);
		} catch (Exception ex) {
			return new ResponseEntity<>( HttpStatus.INTERNAL_SERVER_ERROR);
		}
	}

	@PutMapping("updatestud/{id}")
	public ResponseEntity<Student> updateStud(@PathVariable int id, @RequestBody Student student) {
		try {
			return new ResponseEntity<>(service.updateStudent(id, student), HttpStatus.OK);
		} catch (NoSuchStudentFoundException ex) {
			return new ResponseEntity<>(HttpStatus.NOT_FOUND);
		} catch (Exception ex) {
			return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
	}
	
	//@DeleteMapping("deletestud/{id}")
	
	

}
